var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$initialModel = {
	signUp: _user$project$Signup$init,
	stops: _elm_lang$core$Native_List.fromArray(
		[]),
	stopsUid: 0,
	page: _user$project$Routes$model
};
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$initialModel, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$Model = F4(
	function (a, b, c, d) {
		return {signUp: a, stops: b, stopsUid: c, page: d};
	});
var _user$project$Main$IndexedStop = F2(
	function (a, b) {
		return {id: a, model: b};
	});
var _user$project$Main$updateHelp = F3(
	function (targetId, msg, _p0) {
		var _p1 = _p0;
		var _p3 = _p1.model;
		var _p2 = _p1.id;
		return A2(
			_user$project$Main$IndexedStop,
			_p2,
			_elm_lang$core$Native_Utils.eq(targetId, _p2) ? _elm_lang$core$Basics$fst(
				A2(_user$project$Stop$update, msg, _p3)) : _p3);
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p4 = msg;
		switch (_p4.ctor) {
			case 'Modify':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							stops: A2(
								_elm_lang$core$List$map,
								A2(_user$project$Main$updateHelp, _p4._0, _p4._1),
								model.stops)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Insert':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							stops: A2(
								_elm_lang$core$Basics_ops['++'],
								model.stops,
								_elm_lang$core$Native_List.fromArray(
									[
										A2(_user$project$Main$IndexedStop, model.stopsUid, _user$project$Stop$initialModel)
									])),
							stopsUid: model.stopsUid + 1
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							stops: A2(_elm_lang$core$List$drop, 1, model.stops)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$HomePage = {ctor: 'HomePage'};
var _user$project$Main$LoginPage = {ctor: 'LoginPage'};
var _user$project$Main$SignUpPage = {ctor: 'SignUpPage'};
var _user$project$Main$Remove = {ctor: 'Remove'};
var _user$project$Main$Insert = {ctor: 'Insert'};
var _user$project$Main$Modify = F2(
	function (a, b) {
		return {ctor: 'Modify', _0: a, _1: b};
	});
var _user$project$Main$viewIndexedStop = function (_p5) {
	var _p6 = _p5;
	return A2(
		_elm_lang$html$Html_App$map,
		_user$project$Main$Modify(_p6.id),
		_user$project$Stop$view(_p6.model));
};
var _user$project$Main$view = function (model) {
	var remove = A2(
		_elm_lang$html$Html$button,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Events$onClick(_user$project$Main$Remove)
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('Remove')
			]));
	var add = A2(
		_elm_lang$html$Html$button,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Events$onClick(_user$project$Main$Insert)
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('Add')
			]));
	var stops = A2(_elm_lang$core$List$map, _user$project$Main$viewIndexedStop, model.stops);
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				add,
				remove,
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[]),
				stops)
			]));
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{init: _user$project$Main$init, subscriptions: _user$project$Main$subscriptions, view: _user$project$Main$view, update: _user$project$Main$update})
};
